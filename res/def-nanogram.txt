token TOKEN token
token REGEX regex
token CHARS chars
token ESCAPED escaped
token EXACT exact
token OPERATOR operator
token INCLUDE include
token WHITESPACE whitespace
token NOSTART nostart
regex INTEGER [0-9]+
token LEFT left
token RIGHT right
token NONASSOC nonassoc
token ARROW ->
token CURLY_OPEN {
token CURLY_CLOSE }
token PAREN_OPEN (
token PAREN_CLOSE )
regex RULE_SPLIT \n\s*\|
token COMMA ,
regex COMMENT ;[^\n]*
escaped token SPACE \s
escaped token EOL \n
regex EXPRESSION_POINTER \$([0-9]+)
regex ROL [^\n]*
regex NAME [a-zA-Z_][a-zA-Z_0-9]*

;
; General file structure.
;
Start -> Items { reduceGrammar }
Items -> Items EOL Item { reduceItems }
Items -> Items EOL { reduceItems }
Items -> Item { reduceArrayOf }

;
; Types of items.
;
Item -> TokenDef { reduceIdentity }
Item -> OperatorDef { reduceIdentity }
Item -> RuleSet { reduceIdentity }
Item -> COMMENT { reduceComment }
Item -> Include { reduceIdentity }
Item -> WhitespaceDef { reduceIdentity }

;
; Tokens.
;
TokenDef -> DirectTokenDef { reduceIdentity }
TokenDef -> ExactTokenDef { reduceIdentity }
TokenDef -> EscapedTokenDef { reduceIdentity }
DirectTokenDef -> TokenType SPACE NAME SPACE ROL { reduceTokenDef }
ExactTokenDef -> EXACT SPACE DirectTokenDef { reduceExactToken }
EscapedTokenDef -> ESCAPED SPACE DirectTokenDef { reduceEscapedToken }
EscapedTokenDef -> ESCAPED SPACE ExactTokenDef { reduceEscapedToken }
TokenType -> TOKEN { reduceIdentity }
TokenType -> REGEX { reduceIdentity }
TokenType -> CHARS { reduceIdentity }

;
; Whitespace definition.
;
WhitespaceDef -> WHITESPACE SPACE NAME { reduceWhitespaceDef }
WhitespaceDef -> WHITESPACE SPACE NAME SPACE NOSTART { reduceWhitespaceDef }

;
; Operators.
;
OperatorDef -> OPERATOR SPACE NAME SPACE INTEGER { reduceOperatorDef }
OperatorDef -> OPERATOR SPACE NAME SPACE INTEGER SPACE AssocDef { reduceOperatorDef }
AssocDef -> LEFT { reduceIdentity }
AssocDef -> RIGHT { reduceIdentity }
AssocDef -> NONASSOC { reduceIdentity }

;
; Rules.
;
RuleSet -> NAME SPACE ARROW SPACE RuleRhsList { reduceRuleSet }
RuleRhsList -> RuleRhsList RULE_SPLIT SPACE RuleRhs { reduceRuleRhsList }
RuleRhsList -> RuleRhs { reduceArrayOf }

RuleRhs -> Sequence SPACE CURLY_OPEN SPACE ReduceAction SPACE CURLY_CLOSE { reduceRuleRhs }
RuleRhs -> Sequence { reduceRuleRhs }

Sequence -> Sequence SPACE NAME { reduceSequenceItems }
Sequence -> NAME { reduceIdentity }

ReduceAction -> ExpressionPointer { reduceCopyReduceAction }

ReduceAction -> NAME { reduceCallReduceAction }
ReduceAction -> NAME PAREN_OPEN ReduceActionArgs PAREN_CLOSE { reduceCallReduceAction }

ReduceActionArgs -> ExpressionPointer { reduceArrayOf }
ReduceActionArgs -> ReduceActionArgs COMMA SPACE ExpressionPointer { reduceReduceActionArgs }

ExpressionPointer -> EXPRESSION_POINTER { reduceReduceActionPointer }

;
; Includes.
;
Include -> INCLUDE SPACE ROL { reduceInclude }
